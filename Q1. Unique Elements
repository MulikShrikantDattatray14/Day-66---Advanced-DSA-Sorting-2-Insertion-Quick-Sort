Q1. Unique Elements

Problem Description
You are given an array A of N elements. You have to make all elements unique. To do so, in one step you can increase any number by one.

Find the minimum number of steps.



Problem Constraints
1 <= N <= 10^5
1 <= A[i] <= 10^9



Input Format
The only argument given is an Array A, having N integers.



Output Format
Return the minimum number of steps required to make all elements unique.



Example Input
Input 1:

 A = [1, 1, 3]
Input 2:

 A = [2, 4, 5]


Example Output
Output 1:

 1
Output 2:

 0


Example Explanation
Explanation 1:

 We can increase the value of 1st element by 1 in 1 step and will get all unique elements. i.e [2, 1, 3].
Explanation 2:

 All elements are distinct.


CODE: 

module.exports = {
    //param A : array of integers
    //return an integer
    solve: function (A) {
        //1st way :

        let n = A.length;
        A.sort((a, b) => a - b);
        let count = 0;
        for (let i = 1; i <= n - 1; i++) {
            if (A[i] === A[i - 1]) {
                A[i] = A[i] + 1;
                count++;
            }
            else if (A[i - 1] > A[i]) {
               let diff = ((A[i - 1] + 1) - A[i]);
                A[i] = A[i] + diff;
                count = count + diff;
            }
        }
       return (count)
       


        // 2nd way:(simplified version of 1st way )
        // let n = A.length;
        // A.sort((a, b) => a - b);
        // let count = 0;
        // for (let i = 1; i <= n - 1; i++) {
        //     if (A[i - 1] >= A[i]) {
        //         let diff = ((A[i - 1] + 1) - A[i]);
        //         A[i] = A[i] + diff;
        //         count = count + diff
        //     }
        // }
        // return (count)

    }
};
